//regionals create code
#include <kipr/botball.h>
//useless edit number one
//useless edit number two
//useless edit numer two and a half
//useless edit number three
//useless edit number three and one third
//useless edit number three and two thirds


Int create_speed1 = 100;


void collectFirefighters ()
{


}


void touchSensor(double leftPower, double rightPower)
{
while (digital (1) == 0) 
{
create_drive_direct(leftPower, rightPower); 
}
}


void lineFollow (double lightIntensity, double leftpower, double rightpower, double distance, int portNumber)
{
    int p = 0;
    set_create_distance(0);
    msleep(100);


    while (get_create_distance() >= distance) 
    {
        if (analog(portNumber) < lightIntensity)
        {
            printf("It's dark in here!\n");
            printf("Create sensor is %d", analog(portNumber));
            create_drive_direct(leftpower, rightpower); 
            p = get_create_distance();
            printf("Create distance is %d\n", p);
        }
        else
        {
            printf("I see the light!\n");
            create_drive_direct(rightpower, leftpower);
            p = get_create_distance();
            printf("Create distance is %d\n", p);


        }}
                        printf("done");
}




   void moveCreate(double leftpower, double rightpower, double distance)
{
    int p =0;
    set_create_distance(0);


    printf("move distance %f\n", distance);


    if ( distance == 76.2 ) 
    {
        printf(" I am starting of 76.2 distance move %f \n", distance);
    }


    while (get_create_distance() <= (int) distance) 
    {
        printf("Create distance is %d\n", get_create_distance());
        create_drive_direct(leftpower, rightpower); 
    }


    p = get_create_distance();
    printf("Create stop distance is %d\n", p);


    create_stop();
    msleep(10);
}


void reverseCreate(double leftpower, double rightpower, double distance)
{
    int p =0;
    set_create_distance((int) distance);
    printf("set Create distance is %d\n", (int)get_create_distance());


    while (get_create_distance() >= 0) 
    {
        printf("Create distance is %d\n", get_create_distance());
        create_drive_direct(leftpower, rightpower); 
    }


    p = get_create_distance();
    printf("Create stop distance is %d\n", p);


    create_stop(); 
}


void turnCreate(double leftpower, double rightpower, double angle)
{
    int  p = 0;


    set_create_total_angle(0);


    printf("Create set angle is %d\n", get_create_total_angle());


    while (abs(get_create_total_angle()) < (int) angle) 
    {
        printf("Create angle is %d\n", abs(get_create_total_angle()));
        create_drive_direct(leftpower, rightpower); 
    }


    p = get_create_total_angle();


    printf("Create stop angle is %d\n", p);


    create_stop();   
}


int main() //with robot facing straight
{


 printf("Hello World\n");
 //wait_for_light(1);
`
//Pick up the Firefighter on the black tape


turnCreate(-create_speed1, create_speed1, 90); //Turn left toward the Firefighter Tube


touchSensor(create_speed1, create_speed1); //Move to Pvc on the left of the Firefighter Tube using the touch sensor


reverseCreate(-create_speed1, -create_speed1, 220 /*mm*/); // Back up a little bit to prepare to align with the Firefighter Tube 


turnCreate(create_speed1, -create_speed1, 90); //Turn right toward Firefigher Tube (90 degress)


touchSensor(create_speed1, create_speed1); //Go forward until touch firefighter tube with the touch sensor 


//Align with Firefighter Tube


collectFirefighters(); //Pick up Firefighters from the tube


reverseCreate(-create_speed1, -create_speed1, 150/*mm*/); //Back up to straighten out against pvc (if claw is on the side)


moveCreate(create_speed1, create_speed1, 440 /*mm*/); //Go forward to the medical building area


/*Use Camera and Line Following to find burning medical center*/


camera_open(); 
while (1 == 1)
{
camera_update();


If (get_object_count (0) >= 1)
{
For (i, i < get_object_count(0), i++)
{
                if((get_object_area(0,i) > //area size//) && (get_object_center_x(0,i) > 78) && (get_object_center_x(0,i) < 82))
break; 
}
}
 lineFollow(3500, -1089, -495, /*distance*/, /*port number*/);
}


camera_close();


/*End camera code*/


turnCreate(-create_speed1, create_speed1, 90); //Turn left toward the burning medical center


touchSensor(create_speed1, create_speed1); //Move forward until Create touches the medical center


turnCreate(-create_speed1, create_speed1); //Turn 180 degrees so back is facing the center


//Move claw and put them on top of the center


return 0;
}
